{"version":3,"sources":["components/navbar/Nabvar.js","context/Types.js","context/Context.js","components/track/Track.js","components/tracks/Tracks.js","components/search/Search.js","pages/layout/Layout.js","pages/lirycs/Lyrics.js","serviceWorker.js","index.js","App.js"],"names":["Nabvar","className","GET_TRACKS","SET_SEARCH_RESULTS","reactContext","React","createContext","reducer","state","action","type","trackList","payload","console","log","header","State","props","useReducer","dispatch","Provider","value","Dispatch","children","Track","track","artist_name","track_name","album_name","to","track_id","Tracks","Context","useContext","useEffect","axios","get","process","then","res","data","message","body","track_list","catch","err","length","Spinner","animation","variant","map","item","uid","key","Search","useState","title","setTitle","onSubmit","e","preventDefault","placeholder","name","onChange","target","Layout","Lyrics","lyrics","setLyrics","setTrack","match","params","id","lyrics_body","album_id","explicit","format","first_release_date","Boolean","window","location","hostname","ReactDOM","render","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5ce509bb.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Nabvar() {\r\n    return (\r\n        <nav className='navbar navbar-dark bg-dark mb-5'>\r\n            <h1 className='navbar-brand mb-0 mx-auto' > Buscador de canciones </h1>\r\n        </nav>\r\n    )\r\n}\r\n","export const GET_TRACKS = 'GET_TRACKS'\r\nexport const SET_SEARCH_RESULTS = 'SET_SEARCH_RESULTS'\r\n","import React,{ useReducer } from 'react'\r\nimport { GET_TRACKS, SET_SEARCH_RESULTS } from './Types'\r\n\r\nexport const reactContext = React.createContext()\r\n\r\nfunction reducer (state, action) {\r\n  switch(action.type) {\r\n\r\n    case GET_TRACKS:\r\n      return {\r\n        ...state,\r\n        trackList: [...state.trackList, ...action.payload]\r\n      };\r\n    case SET_SEARCH_RESULTS:\r\n      console.log(action.payload)\r\n      return {\r\n        trackList: [...action.payload],\r\n        header: 'Resultados'\r\n      }\r\n    default: return state\r\n  }\r\n}\r\n\r\nexport function State (props) {\r\n\r\n  const initialState = {\r\n        trackList : [],\r\n        header: 'top 10 de canciones'\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(reducer, initialState)\r\n\r\n    return (\r\n        <reactContext.Provider value= {{ State: state, Dispatch: dispatch }} >\r\n            {props.children}\r\n        </reactContext.Provider>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Track ( { track } ) {\r\n\r\n  return (\r\n    <div className=\"col-md-12\">\r\n      <div className=\"card mb-4 shadow-sm\">\r\n        <div className=\"card-body\">\r\n          <h5>{track.artist_name}</h5>\r\n          <p className=\"card-text\">\r\n            <strong>\r\n              <i className=\"fas fa-play\" /> Track\r\n            </strong>\r\n            : {track.track_name}\r\n            <br />\r\n            <strong>\r\n              <i className=\"fas fa-compact-disc\" /> Album\r\n            </strong>\r\n            : {track.album_name}\r\n          </p>\r\n          <Link\r\n            to={`lyrics/track/${track.track_id}`}\r\n            className=\"btn btn-info btn-block\"\r\n          >\r\n            <i className=\"fas fa-chevron-right\" /> Letra\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n","import React, { useContext, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { reactContext } from '../../context/Context'\r\nimport Track from '../track/Track'\r\n// BOOTSTRAP\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n// TYPES\r\nimport { GET_TRACKS } from '../../context/Types'\r\n\r\nexport default function Tracks() {\r\n\r\n    const Context  = useContext(reactContext)\r\n\r\n    const { trackList } = Context.State\r\n    \r\n    useEffect(() => {\r\n\r\n        axios.get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/chart.tracks.get?chart_name=top&page=1&page_size=10&country=us&f_has_lyrics=1&apikey=${process.env.REACT_APP_MM_KEY}`)\r\n        \r\n        .then(res => {\r\n\r\n            Context.Dispatch({\r\n                type: GET_TRACKS, \r\n                payload: res.data.message.body.track_list \r\n            });\r\n        })\r\n    \r\n        .catch(err => console.log(err))\r\n         \r\n      }, [])\r\n\r\n    return (\r\n        <div>\r\n             { trackList.length === 0 \r\n              ? <Spinner animation=\"border\" variant=\"info\" />\r\n              : trackList.map( (item, uid) =>  <Track key={uid} track={item.track} /> )}\r\n        </div>\r\n    )\r\n}\r\n","import React,{ useState, useEffect, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport { reactContext } from '../../context/Context'\r\nimport { SET_SEARCH_RESULTS } from '../../context/Types'\r\n\r\nexport default function Search() {\r\n\r\nconst [title, setTitle] = useState('')\r\n\r\nconst Context  = useContext(reactContext)\r\n\r\nconst searchSong = (e) => {\r\n\r\n  e.preventDefault();\r\n    \r\n axios.get(\r\n        `https://cors-anywhere.herokuapp.com/http://api.musixmatch.com/ws/1.1/track.search?q_track=${title}&page_size=10&page=1&s_track_rating=desc&apikey=${\r\n          process.env.REACT_APP_MM_KEY\r\n        }`\r\n      )\r\n      .then(res => {\r\n        let trackList = res.data.message.body.track_list;\r\n        \r\n        Context.Dispatch({type: SET_SEARCH_RESULTS, payload: trackList})\r\n\r\n        setTitle('');\r\n      })\r\n      .catch(err => console.log(err));\r\n}\r\n\r\n \r\nreturn (\r\n        <div>\r\n            <div className=\"card card-body mb-4 p-4\">\r\n      <h1 className=\"display-4 text-center\">\r\n        <i className=\"fas fa-music\" /> Busca una cancíon\r\n      </h1>\r\n      <p className=\"lead text-center\">Obtén la letra de cualquiera de ellas</p>\r\n      <form onSubmit={searchSong}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control form-control-lg\"\r\n            placeholder=\"Ingresa el título de la cancíon...\"\r\n            name=\"userInput\"\r\n            value={title}\r\n            onChange={(e)=> setTitle(e.target.value)}\r\n          />\r\n        </div>\r\n        <button className=\"btn btn-primary btn-lg btn-block mb-5\" type=\"submit\">\r\n          Buscar\r\n        </button>\r\n      </form>\r\n    </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Tracks from '../../components/tracks/Tracks'\r\nimport Search from '../../components/search/Search'\r\n\r\nexport default function Layout() {\r\n\r\n    return (\r\n        <div>\r\n            < Search />\r\n            < Tracks />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState, Fragment } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport Moment from \"react-moment\"\r\n\r\nexport default function Lyrics(props) {\r\n\r\n    const [lyrics, setLyrics] = useState({})\r\n    const [track, setTrack] = useState({})\r\n\r\n useEffect(() => {\r\n\r\n    axios\r\n    .get(\r\n      `https://cors-anywhere.herokuapp.com/http://api.musixmatch.com/ws/1.1/track.lyrics.get?track_id=${\r\n        props.match.params.id\r\n      }&apikey=${process.env.REACT_APP_MM_KEY}`\r\n    )\r\n    .then(res => {\r\n      let lyrics = res.data.message.body.lyrics;\r\n      setLyrics( lyrics );\r\n\r\n      return axios.get(\r\n        `https://cors-anywhere.herokuapp.com/http://api.musixmatch.com/ws/1.1/track.get?track_id=${\r\n          props.match.params.id\r\n        }&apikey=${process.env.REACT_APP_MM_KEY}`\r\n      );\r\n    })\r\n    .then(res => {\r\n      let track = res.data.message.body.track;\r\n      setTrack( track );\r\n    })\r\n    .catch(err => console.log(err));\r\n\r\n  }, []);\r\n\r\n    return (\r\n\r\n      <Fragment> \r\n        <Link to=\"/\" className=\"btn btn-dark btn-sm mb-4\">\r\n          Volver atrás\r\n        </Link>\r\n        <div className=\"card\">\r\n\r\n          <h5 className=\"card-header\"> {track.track_name} by <span className=\"text-primary\"> {track.artist_name} </span> </h5>\r\n\r\n          <div className=\"card-body\">\r\n            <p className=\"card-text\">{lyrics.lyrics_body}</p>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <ul className=\"list-group mt-3\">\r\n\r\n          <li className=\"list-group-item\">\r\n            <strong>Album ID</strong>: {track.album_id}\r\n          </li>\r\n          \r\n          <li className=\"list-group-item\">\r\n            <strong>Palabras explícitas</strong>:{\" \"}\r\n            {track.explicit === 0 ? \"No\" : \"Si\"}\r\n          </li>\r\n\r\n          <li className=\"list-group-item\">\r\n            <strong> Fecha de lanzamiento </strong>:{\" \"}\r\n                <Moment format=\"MM/DD/YYYY\">\r\n                {track.first_release_date}\r\n                </Moment>\r\n          </li>\r\n        </ul>\r\n      </Fragment>\r\n    )\r\n}\r\n\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React,{ Fragment } from 'react'\nimport { HashRouter, Route, Switch } from 'react-router-dom'\n// COMPONENTES\nimport Navbar from './components/navbar/Nabvar'\n// PAGINAS \nimport Layout from './pages/layout/Layout'\nimport Lyrics from './pages/lirycs/Lyrics'\n// CONTEXT\nimport { State } from './context/Context'\n\nexport default function App() {\n  \n  return (\n    <State> \n        <HashRouter>\n            <Fragment>\n              <Navbar />\n                <div className='container'> \n                  <Switch>\n                    <Route exact path='/' component={Layout} />\n                    <Route exact path='/lyrics/track/:id' component={Lyrics} /> \n                  </Switch>\n                </div>\n            </Fragment>\n        </HashRouter>\n    </State>\n  )\n}\n\n"],"sourceRoot":""}